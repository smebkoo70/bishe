@model bishe1.Entity.assess1
@{
    ViewBag.Title = "AssessModify";
    Layout = "~/Views/Shared/_AdminLogonLayout.cshtml";
}

<h3>后台评估，提交后就不能修改了，只需给出后台评分</h3>

<div class="form-horizontal">
    @using (Ajax.BeginForm("AssessModify", "BackAssess", new AjaxOptions { HttpMethod = "post", OnSuccess = "success" }))
    {
        @Html.HiddenFor(n => n.date)
        @Html.HiddenFor(n => n.loginID)
        @Html.HiddenFor(n => n.auditID)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(n => n.type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(n => n.type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(n => n.type, "", new { @class = "text-danger" })
            </div>
        </div>


        <br /><br />

        <div class="form-group">
            @Html.LabelFor(n => n.attendance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(n => n.attendance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(n => n.attendance, "", new { @class = "text-danger" })
            </div>
        </div>

        <br /><br />
        <div class="form-group">
            @Html.LabelFor(n => n.requirement, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(n => n.requirement, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(n => n.requirement, "", new { @class = "text-danger" })
            </div>
        </div>

        <br /><br />
        <div class="form-group">
            @Html.LabelFor(n => n.extra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(n => n.extra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(n => n.extra, "", new { @class = "text-danger" })
            </div>
        </div>

        <br /><br />
        <div class="form-group">
            @Html.LabelFor(n => n.self, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(n => n.self, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(n => n.self, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(n => n.backres, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(n => n.backres, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(n => n.backres, "", new { @class = "text-danger" })
            </div>
        </div>

        <br /><br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="提交" class="btn btn-default" />
            </div>
        </div>
    }
</div>

